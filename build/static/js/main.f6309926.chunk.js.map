{"version":3,"sources":["components/CalculateWinner.js","components/Restart.js","components/Square.js","components/Game.js","components/App.js","index.js"],"names":["CalculateWinner","squares","possibleLines","i","length","a","b","c","Restart","onClick","className","Square","value","Game","useState","Array","fill","setSquares","isXNext","setIsXNext","nextSymbol","winner","renderSquare","nextSquares","slice","isBoardFull","App","params","ReactDOM","render","document","getElementById"],"mappings":"8LAuBgBA,MArBf,SAAyBC,GAYpB,IAVF,IAAMC,EAAgB,CAClB,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAC,EAAI,EAAGA,EAAID,EAAcE,OAAQD,IAAK,CAAC,IAAD,cAC3BD,EAAcC,GADa,GACtCE,EADsC,KACnCC,EADmC,KAChCC,EADgC,KAE7C,GAAIN,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,IAAML,EAAQI,KAAOJ,EAAQM,GACpE,OAAON,EAAQI,GAGnB,OAAO,MCVEG,MARf,YAA6B,IAAXC,EAAU,EAAVA,QACd,OACI,4BAAQC,UAAU,UAAUD,QAASA,GAArC,eCOOE,MATf,YAAmC,IAAlBC,EAAiB,EAAjBA,MAAMH,EAAW,EAAXA,QACnB,OACI,4BAAQC,UAAU,SAAQD,QAASA,GAC9BG,ICmFEC,MAlFf,WAAiB,IAAD,EAEeC,mBAASC,MAAM,GAAGC,KAAK,OAFtC,mBAELf,EAFK,KAEGgB,EAFH,OAGcH,oBAAS,GAHvB,mBAGNI,EAHM,KAGEC,EAHF,KAINC,EAAWF,EAAQ,IAAI,IACvBG,EAASrB,EAAgBC,GA+BzBqB,EAAa,SAACnB,GACjB,OAAQ,kBAAC,EAAD,CACPS,MAAOX,EAAQE,GACfM,QAAS,WACL,GAAgB,MAAZR,EAAQE,IAAmB,MAARkB,EAAvB,CAGA,IAAME,EAAYtB,EAAQuB,QAC1BD,EAAYpB,GAAGiB,EACfH,EAAWM,GACXJ,GAAYD,QAOpB,OACI,yBAAKR,UAAU,aACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,cACX,yBAAKA,UAAU,aACVY,EAAa,GACbA,EAAa,GACbA,EAAa,IAElB,yBAAKZ,UAAU,aACVY,EAAa,GACbA,EAAa,GACbA,EAAa,IAElB,yBAAKZ,UAAU,aACVY,EAAa,GACbA,EAAa,GACbA,EAAa,KAGtB,yBAAKZ,UAAU,aAxDnBW,EACG,WAAaA,EAXN,SAACpB,GACf,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IACpC,GAAkB,MAAdF,EAAQE,GACR,OAAO,EAGX,OAAO,EAMIsB,CAAYxB,GAChB,QAEA,gBAAkBmB,GAoDjB,yBAAKV,UAAU,kBA/CrB,kBAAC,EAAD,CACED,QAAS,WACPQ,EAAWF,MAAM,GAAGC,KAAK,OACzBG,GAAW,UC1BVO,MAPf,SAAaC,GACT,OACI,kBAAC,EAAD,OCDRC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.f6309926.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport \"./App.css\";\r\n function CalculateWinner(squares) {\r\n     \r\n    const possibleLines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n      ];\r\n      for (let i = 0; i < possibleLines.length; i++) {\r\n        const [a, b, c] = possibleLines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n          return squares[a];\r\n        }\r\n      }\r\n      return null;\r\n      \r\n }\r\n export default CalculateWinner","import React, { useState } from 'react';\r\nimport \"./App.css\";\r\nfunction Restart({onClick}) {\r\n    return (\r\n        <button className=\"restart\" onClick={onClick}>\r\n          Play again\r\n        </button>\r\n      )\r\n}\r\n\r\nexport default Restart","import React, { useState } from 'react';\r\nimport \"./App.css\";\r\nfunction Square({value,onClick,}) {\r\n    return(\r\n        <button className='square'onClick={onClick}>\r\n            {value}\r\n        </button>\r\n    \r\n    )\r\n\r\n}\r\nexport default Square;","import React, { useState } from 'react';\r\nimport \"./App.css\";\r\nimport CalculateWinner from './CalculateWinner.js';\r\nimport Restart from './Restart.js';\r\n\r\nimport Square from './Square.js'\r\nfunction Game() {\r\n    \r\n    const [squares,setSquares]=useState(Array(9).fill(null))\r\n    const[isXNext,setIsXNext]=useState(true)\r\n    const nextSymbol=isXNext?\"X\":\"O\";\r\n    const winner = CalculateWinner(squares);\r\n    \r\n    const isBoardFull=(squares)=> {\r\n        for (let i = 0; i < squares.length; i++) {\r\n        if (squares[i] == null) {\r\n            return false;\r\n        }\r\n        }\r\n        return true;\r\n    }\r\n  \r\n    const getStatus=()=> {\r\n        if (winner) {\r\n        return \"Winner: \" + winner;\r\n        } else if (isBoardFull(squares)) {\r\n        return \"Draw!\";\r\n        } else {\r\n        return \"Next player: \" + nextSymbol\r\n        }\r\n    }\r\n    const renderRestartButton=()=> {\r\n        return (\r\n          <Restart\r\n            onClick={() => {\r\n              setSquares(Array(9).fill(null));\r\n              setIsXNext(true);\r\n            }}\r\n          />\r\n        );\r\n      }\r\n\r\n    const renderSquare=(i)=>{\r\n       return( <Square\r\n        value={squares[i]}\r\n        onClick={()=>{\r\n            if (squares[i]!=null ||winner!=null) {\r\n                return\r\n            }\r\n            const nextSquares=squares.slice()//returns array of all values to return array ye kiya thats it.\r\n            nextSquares[i]=nextSymbol\r\n            setSquares(nextSquares)\r\n            setIsXNext(!isXNext)//toggling\r\n        }}\r\n        />\r\n       )\r\n\r\n    }\r\n    \r\n    return(\r\n        <div className='container'>\r\n            <div className='game'>\r\n                <div className='game=board'>\r\n                    <div className='board-row'>\r\n                        {renderSquare(0)}\r\n                        {renderSquare(1)}\r\n                        {renderSquare(2)}\r\n                    </div>\r\n                    <div className='board-row'>\r\n                        {renderSquare(3)}\r\n                        {renderSquare(4)}\r\n                        {renderSquare(5)}\r\n                    </div>\r\n                    <div className='board-row'>\r\n                        {renderSquare(6)}\r\n                        {renderSquare(7)}\r\n                        {renderSquare(8)}\r\n                    </div>\r\n                </div>\r\n                <div className=\"game-info\">{getStatus()}</div>\r\n                <div className=\"restart-button\">{renderRestartButton()}</div>\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    )\r\n\r\n}\r\nexport default Game;","import React, { useState } from 'react';\r\nimport \"./App.css\";\r\nimport Game from './Game.js'\r\nfunction App(params) {\r\n    return(\r\n        <Game/>\r\n        \r\n    )\r\n\r\n}\r\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App.js\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}